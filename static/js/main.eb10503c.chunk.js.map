{"version":3,"sources":["components/MyNavbar.js","pages/Home.js","components/FieldInput.js","components/GenericForm.js","components/Panel.js","hooks/useStringFormatter.js","components/BasicTable.js","providers/costeosapi.js","pages/CostosFijos.js","providers/actions.js","pages/Insumos.js","pages/About.js","pages/NotFound.js","App.js","index.js"],"names":["MyNavbar","useState","isActive","setIsActive","className","role","aria-label","to","onClick","aria-expanded","data-target","aria-hidden","id","Home","FieldInput","name","type","title","placeholder","icon","errors","inputRef","onFocus","showError","ref","toLowerCase","GenericForm","fields","register","handleSubmit","postMutation","onSubmit","mutate","map","field","index","required","undefined","reset","value","isLoading","isError","error","message","isSuccess","Panel","tabs","children","colorClass","headerButton","tab","is_active","React","Children","child","key","useStringFormatter","money","Intl","NumberFormat","style","currency","toFloat","string","replace","parseFloat","ButtonDelete","row","deleteData","isInEditMode","original","cursor","size","defaultColumn","Cell","initialValue","column","updateCallback","money_column","setValue","isEditing","setIsEditing","useEffect","displayValue","format","onChange","e","target","onBlur","updatedrow","BasicTable","cols","data","showTotal","update_callback","total","useMemo","_total","forEach","setIsInEditMode","columns","Header","accessor","skipPageReset","setSkipPageReset","useTable","autoResetPage","updatingdrow","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","preGlobalFilteredRows","setGlobalFilter","GlobalFilterInput","globalFilter","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","count","length","useAsyncDebounce","border","axios","create","baseURL","getCostoFijo","costeosapi","get","then","res","postCostoFijo","costofijo","post","putCostoFijo","updated_costofijo","put","deleteCostoFijo","delete","CostosFijos","queryClient","useQueryClient","useForm","useQuery","postCostoFijoMut","useMutation","onSuccess","invalidateQueries","putCostdoFijoMut","deleteCostoFijoMut","insumos_actions","old_state","addRow","editRow","deleteRow","insumos","rowIndex","columnId","filter","element","Insumos","useStateMachine","action","About","Component","NotFound","textAlign","App","exact","path","component","initialIsOpen","QueryClient","history","createBrowserHistory","basename","process","ReactDOM","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.eb10503c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const MyNavbar = () => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  let togleActive = () => { setIsActive(!isActive) }\r\n  return (\r\n    <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <Link to='/' className=\"navbar-item\">\r\n          <h1 className='title'>\r\n            Costeapp\r\n          </h1>\r\n        </Link>\r\n        <span role=\"button\" onClick={togleActive} className={`navbar-burger burger ${isActive && 'is-active'}`} aria-label=\"menu\" aria-expanded=\"false\" data-target=\"mainNavbar\">\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n        </span>\r\n      </div>\r\n      <div id=\"mainNavbar\" className={`navbar-menu ${isActive && 'is-active'}`}>\r\n        <div className=\"navbar-start\">\r\n          <Link className=\"navbar-item\" to=\"/costos-fijos\">Costos fijos</Link>\r\n          <Link className=\"navbar-item\" to=\"/insumos_\">Insumos</Link>\r\n          <Link className=\"navbar-item\" to=\"/recetas\">Recetas</Link>\r\n          <Link className=\"navbar-item\" to=\"/reporte\">Reporte</Link>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n        <Link to='/about' className=\"navbar-item\">\r\n            Acerca de\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","export const Home = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Bienvenido! Para hacer un costeo, utiliza la barra de navegación para ir\r\n        al menú apropiado.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport function FieldInput({\r\n  name,\r\n  type,\r\n  title,\r\n  placeholder,\r\n  icon,\r\n  errors,\r\n  inputRef,\r\n  onFocus = null\r\n}) {\r\n  const showError = errors[name]\r\n  return (\r\n    <div className=\"field\">\r\n      {title && <label className=\"label\">{title}</label>}\r\n      <div className=\"control has-icons-left\">\r\n        <input\r\n          ref={inputRef}\r\n          className=\"input\"\r\n          name={name}\r\n          type={type || 'text'}\r\n          placeholder={placeholder || title}\r\n          onFocus={onFocus}\r\n        />\r\n        {icon && <span className=\"icon is-small is-left\">{icon}</span>}\r\n      </div>\r\n      {showError && (\r\n        <p className=\"help is-danger\">Falta agregar {title.toLowerCase()}.</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nFieldInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf(['text', 'email', 'password', 'number']),\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  icon: PropTypes.element,\r\n  errors: PropTypes.object,\r\n  inputRef: PropTypes.any,\r\n  onFocus: PropTypes.func,\r\n}\r\n\r\nexport default FieldInput\r\n","import React from 'react'\r\nimport FieldInput from './FieldInput'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport function GenericForm({\r\n  fields,\r\n  register,\r\n  handleSubmit,\r\n  postMutation,\r\n  errors,\r\n}) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(postMutation.mutate)}>\r\n        {fields.map((field, index) => (\r\n          <FieldInput\r\n            inputRef={register({\r\n              required: field.required === undefined ? true : field.required,\r\n            })}\r\n            title={field.title}\r\n            name={field.name}\r\n            type={field.type}\r\n            icon={field.icon}\r\n            errors={errors}\r\n            key={field.name + index}\r\n            onFocus={() => postMutation.reset()}\r\n          />\r\n        ))}\r\n        <input\r\n          className=\"button is-success is-fullwidth\"\r\n          type=\"submit\"\r\n          value=\"Agregar\"\r\n        />\r\n        <>\r\n          {postMutation.isLoading ? 'Agregando...' : null}\r\n          {postMutation.isError\r\n            ? 'Ocurrió un error:' + postMutation.error.message\r\n            : null}\r\n          {postMutation.isSuccess ? 'Éxito al agregar!' : null}\r\n        </>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nGenericForm.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport function Panel({ title, tabs, children, colorClass, headerButton }) {\r\n  return (\r\n    <div>\r\n      <nav className={'panel ' + (colorClass || 'is-primary')}>\r\n        <div className=\"panel-heading\">\r\n          <nav className=\"level\">\r\n            <span className=\"level-left\">{title}</span>\r\n            <span className=\"level-right\">{headerButton && headerButton}</span>\r\n          </nav>\r\n        </div>\r\n        {tabs && (\r\n          <p className=\"panel-tabs\">\r\n            {tabs.map((tab) => (\r\n              <span className={tab.is_active && 'is-active'}>{tab.title}</span>\r\n            ))}\r\n          </p>\r\n        )}\r\n        {React.Children.map(children, (child) => (\r\n          <label className=\"panel-block\" key={child.key}>\r\n            {child}\r\n          </label>\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nPanel.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  tabs: PropTypes.array,\r\n  colorClass: PropTypes.string,\r\n  headerButton: PropTypes.any,\r\n}\r\n\r\nexport default Panel\r\n","export function useStringFormatter() {\r\n  return {\r\n    money: new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n    }),\r\n    toFloat: (string) => {\r\n      if (typeof string == 'string') {\r\n        string = string.replace('$', '')\r\n        return parseFloat(string.replace(',', ''))\r\n      } else return string\r\n    },\r\n  }\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n} from 'react-table'\r\nimport { Panel } from '../components/Panel'\r\nimport { FiSearch } from 'react-icons/fi'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport { useStringFormatter } from '../hooks/useStringFormatter'\r\n\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index, original },\r\n  column: { id },\r\n  updateCallback, // This is a custom function that we supplied to our table instance\r\n  money_column, // custom prop passed\r\n  isInEditMode, // indicate if the cell is in edit mode\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n  // Para llevar control de si el campo esta siendo editado\r\n  const [isEditing, setIsEditing] = React.useState(false)\r\n  // hook para dar formato a los campos de las tablas\r\n  const { money, toFloat } = useStringFormatter()\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    const updatedrow = original\r\n    updatedrow[id] = value\r\n    updateCallback(updatedrow)\r\n    setIsEditing(false)\r\n  }\r\n\r\n  const onFocus = (e) => {\r\n    setIsEditing(true)\r\n    if (id === money_column) setValue(toFloat(value))\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  const displayValue =\r\n    id === money_column && !isEditing ? money.format(value) : value\r\n\r\n  return (\r\n    <>\r\n      {!isInEditMode ? (\r\n        <span>{displayValue}</span>\r\n      ) : (\r\n        <input\r\n          className=\"input\"\r\n          value={displayValue}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          onFocus={onFocus}\r\n          type={id === money_column && isEditing ? 'number' : 'text'}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst ButtonDelete = ({ row, deleteData, isInEditMode }) => {\r\n  return isInEditMode ? (\r\n    <MdDeleteForever\r\n      className=\"has-text-danger\"\r\n      onClick={() => {\r\n        deleteData(row.original.id)\r\n      }}\r\n      style={{ cursor: 'pointer' }}\r\n      size={32}\r\n    />\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\nexport function BasicTable({\r\n  title,\r\n  cols,\r\n  data,\r\n  money_column,\r\n  showTotal,\r\n  update_callback,\r\n  deleteData,\r\n}) {\r\n  // Calculando total\r\n  const { money } = useStringFormatter()\r\n  const total = useMemo(() => {\r\n    let _total = 0\r\n    if (!money_column) return money.format(_total)\r\n    data.forEach((row) => {\r\n      _total += parseFloat(row[money_column])\r\n    })\r\n    return money.format(_total || 0)\r\n  }, [data, money, money_column])\r\n\r\n  // Controla si las celdas se renderizan como inputs editables o de manera normal\r\n  const [isInEditMode, setIsInEditMode] = useState(false)\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      ...cols,\r\n      {\r\n        Header: '',\r\n        accessor: 'delete',\r\n        Cell: ButtonDelete,\r\n      },\r\n    ],\r\n    [cols]\r\n  )\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [data])\r\n  // When our cell renderer calls update_callback, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const updateCallback = (updatingdrow) => {\r\n    // We also turn on the flag to not reset the page\r\n    update_callback(updatingdrow);\r\n    setSkipPageReset(true)\r\n  }\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // update_callback isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateCallback,\r\n      deleteData,\r\n      money_column,\r\n      isInEditMode,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy\r\n  )\r\n\r\n  return (\r\n    <Panel\r\n      title={title}\r\n      colorClass=\"is-pink\"\r\n      headerButton={\r\n        <FiEdit\r\n          className={isInEditMode && 'has-text-white'}\r\n          onClick={() => {\r\n            setIsInEditMode(!isInEditMode)\r\n          }}\r\n          style={{ cursor: 'pointer' }}\r\n        />\r\n      }\r\n    >\r\n      <GlobalFilterInput\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      <table className=\"table is-fullwidth is-hoverable\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                // Add the sorting props to control sorting.\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  {/* Add a sort direction indicator */}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        {showTotal && (\r\n          <tfoot>\r\n            <tr>\r\n              <td className=\"is-size-5 px-3 has-text-weight-bold\">Total</td>\r\n              <td className=\"is-size-5 px-3 has-text-weight-bold\">{total}</td>\r\n            </tr>\r\n          </tfoot>\r\n        )}\r\n      </table>\r\n    </Panel>\r\n  )\r\n}\r\n\r\nBasicTable.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  money_column: PropTypes.string,\r\n  showTotal: PropTypes.bool,\r\n  update_callback: PropTypes.func.isRequired,\r\n  deleteData: PropTypes.func.isRequired,\r\n}\r\n\r\nfunction GlobalFilterInput({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <p className=\"control has-icons-left\">\r\n      <input\r\n        className=\"input is-fullwidth\"\r\n        type=\"search\"\r\n        value={value || ''}\r\n        onChange={(e) => {\r\n          setValue(e.target.value)\r\n          onChange(e.target.value)\r\n        }}\r\n        placeholder={`Buscar entre ${count} registros...`}\r\n        style={{\r\n          border: '0',\r\n        }}\r\n      />\r\n      <span className=\"icon is-left\">\r\n        <FiSearch />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://costeosapi.herokuapp.com/'\r\n});","import React, { useMemo } from 'react'\r\nimport { GenericForm } from '../components/GenericForm'\r\nimport { BasicTable } from '../components/BasicTable'\r\nimport { useForm } from 'react-hook-form'\r\nimport { FaClipboardList } from 'react-icons/fa'\r\nimport { MdAttachMoney } from 'react-icons/md'\r\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\r\nimport costeosapi from '../providers/costeosapi'\r\n\r\nconst getCostoFijo = () => costeosapi.get('costosfijos').then((res) => res.data)\r\nconst postCostoFijo = (costofijo) => costeosapi.post('costosfijos', costofijo)\r\nconst putCostoFijo = (updated_costofijo) =>\r\n  costeosapi.put(`costosfijos/${updated_costofijo.id}`, updated_costofijo)\r\nconst deleteCostoFijo = (id) => costeosapi.delete(`costosfijos/${id}`)\r\n\r\nexport function CostosFijos() {\r\n  // Inicializando react-query\r\n  const queryClient = useQueryClient()\r\n  // Inicializando el hook para el formulario\r\n  const { register, handleSubmit, errors, reset } = useForm()\r\n\r\n  // obteniendo datos de costos fijos\r\n  const { isLoading, error, data } = useQuery('costos_fijos', getCostoFijo)\r\n  // creando mutacion para agregar costosfijos\r\n  const postCostoFijoMut = useMutation(postCostoFijo, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('costos_fijos') // actualiza los datos de la tabla\r\n      reset() // reseteando el formulario\r\n    },\r\n  })\r\n  // creando mutación para actualizar costosfijos\r\n  const putCostdoFijoMut = useMutation(putCostoFijo) // No invalidar querys, porque el backend debe acatar lo que indique el frontend\r\n  // creando mutación para borrar costosfijos\r\n  const deleteCostoFijoMut = useMutation(deleteCostoFijo, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('costos_fijos') // actualiza los datos de la tabla\r\n    },\r\n  })\r\n\r\n  // Campos del formulario\r\n  const fields = React.useMemo(\r\n    () => [\r\n      {\r\n        title: 'Concepto',\r\n        name: 'concepto',\r\n        type: 'text',\r\n        icon: <FaClipboardList />,\r\n      },\r\n      {\r\n        title: 'Costo mensual',\r\n        name: 'costo_mensual',\r\n        type: 'number',\r\n        icon: <MdAttachMoney />,\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Definiendo columnas de la tabla\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Concepto',\r\n        accessor: 'concepto',\r\n      },\r\n      {\r\n        Header: 'Costo mensual',\r\n        accessor: 'costo_mensual',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  if (isLoading) return 'Loading...'\r\n\r\n  if (error) return 'An error has occurred: ' + error.message\r\n\r\n  return (\r\n    <div className=\"columns is-variable is-3\">\r\n      <div className=\"column\">\r\n        <div className=\"box\">\r\n          <GenericForm\r\n            fields={fields}\r\n            register={register}\r\n            handleSubmit={handleSubmit}\r\n            postMutation={postCostoFijoMut}\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"column\">\r\n        <BasicTable\r\n          title=\"Costos Fijos\"\r\n          cols={columns}\r\n          data={data}\r\n          money_column=\"costo_mensual\"\r\n          showTotal={true}\r\n          update_callback={putCostdoFijoMut.mutate}\r\n          deleteData={deleteCostoFijoMut.mutate}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export function costos_fijos_actions(\r\n  old_state,\r\n  { addRow, editRow, deleteRow }\r\n) {\r\n  if (addRow) {\r\n    return {\r\n      ...old_state,\r\n      costos_fijos: [...old_state.costos_fijos, addRow],\r\n    }\r\n  }\r\n\r\n  if (editRow) {\r\n    const { rowIndex, columnId, value } = editRow\r\n    return {\r\n      ...old_state,\r\n      costos_fijos: old_state.costos_fijos.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old_state.costos_fijos[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      }),\r\n    }\r\n  }\r\n\r\n  if (deleteRow) {\r\n    return {\r\n      ...old_state,\r\n      costos_fijos: old_state.costos_fijos.filter(\r\n        (element, index) => index !== deleteRow\r\n      ),\r\n    }\r\n  }\r\n}\r\n\r\nexport function insumos_actions(\r\n  old_state,\r\n  { addRow, editRow, deleteRow }\r\n) {\r\n  if (addRow) {\r\n    return {\r\n      ...old_state,\r\n      insumos: [...old_state.insumos, addRow],\r\n    }\r\n  }\r\n\r\n  if (editRow) {\r\n    const { rowIndex, columnId, value } = editRow\r\n    return {\r\n      ...old_state,\r\n      insumos: old_state.insumos.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old_state.insumos[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      }),\r\n    }\r\n  }\r\n\r\n  if (deleteRow) {\r\n    return {\r\n      ...old_state,\r\n      insumos: old_state.insumos.filter(\r\n        (element, index) => index !== deleteRow\r\n      ),\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { GenericForm } from '../components/GenericForm'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStateMachine } from 'little-state-machine'\r\nimport { insumos_actions } from '../providers/actions'\r\nimport { BasicTable } from '../components/BasicTable'\r\nimport { GiMeat } from 'react-icons/gi'\r\nimport { MdAttachMoney } from 'react-icons/md'\r\nimport { AiOutlineNumber } from 'react-icons/ai'\r\nimport { AiFillTag } from 'react-icons/ai'\r\nimport { FaTrashAlt } from 'react-icons/fa'\r\n\r\n\r\nexport function Insumos() {\r\n  // Inicializando el manejador global del state para agregar y editar elementos\r\n  const {\r\n    action,\r\n    state: { insumos },\r\n  } = useStateMachine(insumos_actions)\r\n  // Inicializando el hook para el formulario\r\n  const { register, handleSubmit, errors, reset } = useForm()\r\n  // lambda usado por el formulario para agregar datos al state de la tabla\r\n  const addData = (data) => {\r\n    action({ addRow: data })\r\n    reset()\r\n  }\r\n  const fields = React.useMemo(\r\n    () => [\r\n      {\r\n        title: 'Insumo',\r\n        name: 'insumo',\r\n        type: 'text',\r\n        icon: <GiMeat />,\r\n      },\r\n      {\r\n        title: 'Valor de compra',\r\n        name: 'valor_de_compra',\r\n        type: 'number',\r\n        icon: <MdAttachMoney />,\r\n      },\r\n      {\r\n        title: 'Cantidad',\r\n        name: 'cantidad',\r\n        type: 'number',\r\n        icon: <AiOutlineNumber />,\r\n      },\r\n      {\r\n        title: 'Unidad',\r\n        name: 'unidad',\r\n        type: 'text',\r\n        icon: <AiFillTag />,\r\n      },\r\n      {\r\n        title: 'Merma',\r\n        name: 'merma',\r\n        type: 'number',\r\n        icon: <FaTrashAlt />,\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // Definiendo columnas de la tabla\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Insumo',\r\n        accessor: 'insumo',\r\n      },\r\n      {\r\n        Header: 'Valor de compra',\r\n        accessor: 'valor_de_compra',\r\n      },\r\n      {\r\n        Header: 'Cantidad',\r\n        accessor: 'cantidad',\r\n      },\r\n      {\r\n        Header: 'Unidad',\r\n        accessor: 'unidad',\r\n      },\r\n      {\r\n        Header: 'Merma',\r\n        accessor: 'merma',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [insumos])\r\n\r\n  // When our cell renderer calls update_callback, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const update_callback = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true)\r\n    action({\r\n      editRow: { rowIndex: rowIndex, columnId: columnId, value: value },\r\n    })\r\n  }\r\n\r\n  // lambda usado por la tabla para eliminar datos al state de la tabla\r\n  const deleteData = (row) => {\r\n    action({ deleteRow: row.id })\r\n  }\r\n\r\n  return (\r\n    <div className=\"columns is-variable is-3\">\r\n      <div className=\"column\">\r\n        <div className=\"box\">\r\n          <GenericForm\r\n            fields={fields}\r\n            register={register}\r\n            handleSubmit={handleSubmit}\r\n            onSubmit={addData}\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"column\">\r\n        <BasicTable\r\n          title=\"Insumos\"\r\n          cols={columns}\r\n          data={insumos}\r\n          money_column=\"valor_de_compra\"\r\n          update_callback={update_callback}\r\n          deleteData={deleteData}\r\n          skipPageReset={skipPageReset}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className='title'>Acerca de</h1>\r\n        <p>App creada por Giovanny González Baltazar usando las ideas de Kora Amaya Valdéz.</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className='title' style={{textAlign:'center'}}>404 La página a la que intentas acceder no existe.</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { MyNavbar } from './components/MyNavbar'\r\nimport { Home } from './pages/Home'\r\nimport { CostosFijos } from './pages/CostosFijos'\r\nimport { Insumos } from './pages/Insumos'\r\nimport { About } from './pages/About'\r\nimport { NotFound } from './pages/NotFound'\r\nimport { ReactQueryDevtools } from 'react-query/devtools'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <MyNavbar />\r\n      <div className=\"container mt-4\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/costos-fijos\" component={CostosFijos} />\r\n          <Route exact path=\"/insumos\" component={Insumos} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.sass'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { createBrowserHistory } from 'history';\n\nconst queryClient = new QueryClient()\n\nexport const history = createBrowserHistory({\n    basename: process.env.PUBLIC_URL\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}